user www-data;

events {

}

http {

  include mime.types;

  # Redirect to HTTPS
  server {
    listen 80;
    server_name abc.com;

    return 301 https://$host$request_uri;
  }

  server {
    listen: 443 ssl http2;
    server_name abc.com;

    root sites/demo;

    index index.html;

    ssl_certificate /etc/nginx/ssl/self.crt;
    ssl_certificate_key /etc/nginx/ssl/self.key;

    # disable ssl protocol for security and enabling tls
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

    # Optimize cipher suite
    ssl_prefer_server_ciphers on;
    # ciphers are separated with : and the one not to use are represented by !
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    # Enable diffie helman key exchange parameters
    # to generate dhparam, here 2048 is for matchig it with rsa size: openssl dhparam 2048 -out /etc/nginx/ssl/dhparam.pem
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Enable strict transport security HSTS. This minimizes the redirect from port 80 to port 443
    add_header Strict-Transport_Security "max-age=31536000" always;

    # SSL cache. Allows to cache the handshake
    # builtin is limited to worker process, shared is kept in memory and can be shared by any worker
    ssl_session_cache shared:SSL:40m;
    ssl_session_timeout 4h;
    # tickets are used to allow browser access the cache without access by server. Provide browser with ticket
    ssl_session_tickets on;

    location / {
      try_files $uri $uri/ =404;
    }

    location ~\.php$ {
      include fastcgi.conf;
      fastcgi_pass unix:/run/php/php7.1-fpm.sock;
    }
  }
}
