# blocks using {} are called context which the key and value are called directives
# after changin file use systemctl reload nginx
# we can also use systemctl restart nginx but this stops nginx and than start
# nginx -t => to check if syntax is ok
# to check for headers run => curl -I https://website.com/style.css

events {

}

http {
  # to specity content types but it is better to configure the types in /etc/nginx/mime.types
  # types {
  #   text/html html;
  #   text/css css;
  # };
  include mime.types;

  server {
    listen 80;
    server_name <IP_ADDRESS_OR_DOMAIN_NAME>;
    # static path for static files from where it will find the path
    root /sites/demo;

    # # Prefix match
    # # it is the location in url we have to match. this will match greet also greeting or greeting/more
    # location /greet {
    #   return 200 "Hello from nginx greet location - PREFIX match";
    # }

    # # Exact match
    # # match exactly with the pathname
    # location = /greet {
    #   return 200 "Hello from nginx greet location - Exact Match";
    # }
    # # REGEX match - case sensitive
    # location ~ /greet[0-9] {
    #   return 200 "Hello from nginx greet location - REGEX Match - CASE SENSITIVE";
    # }
    # REGEX match - case insensitive
    location ~* /greet[0-9] {
      return 200 "Hello from nginx greet location - REGEX Match - CASE INSENSITIVE";
    }

    # Preferential Prefix match
    location ^~ /Greet2 {
      return 200 "Hello from nginx greet location - PREFIX match";
    }

    # REGEX > PREFIX priority but if we use preferential prefix than its priopity > regex

    # Priority:
    # Exact Match
    # Preferencial Prefix Match
    # Regex Match (Case Insensitive and sensitive priority will be determined by which comes first)
    # Prefix
  }
}